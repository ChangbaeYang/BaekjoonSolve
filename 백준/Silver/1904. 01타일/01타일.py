import sys
input = sys.stdin.readline

# 문제를 관찰해보면 dp로 푸는 문제임을 확인할 수 있다.(피보나치 수열처럼)
# 다른 점은 입력값이 100만까지 들어올 수 있어서 메모리 초과가 날 수 있다는 점이다.
# 따라서 조금 수정이 필요하다. -> 지우면서 데이터를 만들어가야할 것 같다. queue 이용해보자.
# 3칸만 사용하고 큐처럼 당겨서 메모이제이션을 쓰기엔 문제가 생긴다. -> 굳이 리스트로 다루지 말고, 변수로 활요하자
# 변수로도 안된다... 해쉬테이블? 딕셔너리로 이용해 볼까? 딕셔너리도 마찬가지다....오래걸린다....
# 로직을 바꿔야한다....어떻게 바꾸지 지금은 3n인데...더 줄일 방법은 무엇일까?
# 리스트를 쓰면서 메모이제이션의 구성을 가져와볼까?
# 나머지를 계속 나눠주는게 효율 좋았다! => **
def dp(n):
    if n == 1:          # 예외처리
        return 1
    elif n == 2:
        return 2
    a = 1
    b = 2

    for i in range(3, N + 1):
        result = (a + b) % 15746    # ** 나머지를 계속 나눠주면 수가 줄어든다.!
        a, b = b, result
    return result

N = int(input())    # 타일이 들어갈 공간의 크기(1 <= N <= 1,000,000)
result = dp(N)
print(result)